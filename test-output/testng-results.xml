<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screehot]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\Admin\eclipse-workspace\MyApumFrmwrkParrellExecutn\Screenshots\Android_pixel7_emulator-5554\LoginTests\invalidUsername.png'> <img src='C:\Users\Admin\eclipse-workspace\MyApumFrmwrkParrellExecutn\Screenshots\Android_pixel7_emulator-5554\LoginTests\invalidUsername.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite started-at="2023-10-09T19:53:29 GST" name="Suite" finished-at="2023-10-09T19:55:01 GST" duration-ms="92586">
    <groups>
    </groups>
    <test started-at="2023-10-09T19:53:29 GST" name="Android" finished-at="2023-10-09T19:55:01 GST" duration-ms="92586">
      <class name="com.qa.tests.LoginTests">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:53:14 GST" name="beforeSuite" finished-at="2023-10-09T19:53:29 GST" duration-ms="14165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:53:29 GST" name="beforeTest" finished-at="2023-10-09T19:53:58 GST" duration-ms="29167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pixel7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[10010]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[11000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:53:58 GST" name="beforeClass" finished-at="2023-10-09T19:53:58 GST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:53:58 GST" name="beforeMethod" finished-at="2023-10-09T19:53:59 GST" duration-ms="851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUsername()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:53:59 GST" name="invalidUsername" finished-at="2023-10-09T19:54:14 GST" duration-ms="14417" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.fffdfff]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.fffdfff]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.qa.tests.LoginTests.invalidUsername(LoginTests.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screehot]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\Admin\eclipse-workspace\MyApumFrmwrkParrellExecutn\Screenshots\Android_pixel7_emulator-5554\LoginTests\invalidUsername.png'> <img src='C:\Users\Admin\eclipse-workspace\MyApumFrmwrkParrellExecutn\Screenshots\Android_pixel7_emulator-5554\LoginTests\invalidUsername.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidUsername -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:14 GST" name="afterMethod" finished-at="2023-10-09T19:54:14 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:14 GST" name="beforeMethod" finished-at="2023-10-09T19:54:14 GST" duration-ms="113" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.invalidUserPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidUserPassword()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:14 GST" name="invalidUserPassword" finished-at="2023-10-09T19:54:27 GST" duration-ms="13023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:27 GST" name="afterMethod" finished-at="2023-10-09T19:54:27 GST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:27 GST" name="beforeMethod" finished-at="2023-10-09T19:54:27 GST" duration-ms="96" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.tests.LoginTests.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:27 GST" name="successfulLogin" finished-at="2023-10-09T19:54:40 GST" duration-ms="12871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:40 GST" name="afterMethod" finished-at="2023-10-09T19:54:40 GST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:54:40 GST" name="afterClass" finished-at="2023-10-09T19:55:01 GST" duration-ms="20595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:55:01 GST" name="afterTest" finished-at="2023-10-09T19:55:01 GST" duration-ms="301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.qa.tests.LoginTests@2f4854d6]" started-at="2023-10-09T19:55:01 GST" name="afterSuite" finished-at="2023-10-09T19:55:01 GST" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.tests.LoginTests -->
    </test> <!-- Android -->
  </suite> <!-- Suite -->
</testng-results>
